name: CI

on:
  pull_request:
  merge_group: { types: [checks_requested] }
  push: { branches: [master] }
  schedule: [cron: "40 1 * * *"]

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  read_msrv:
    name: Read MSRV
    uses: actions-rust-lang/msrv/.github/workflows/msrv.yml@v0.1.0

  test:
    name: Test Rust (${{ matrix.rust }})

    needs: read_msrv
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rust: [nightly, beta, stable, "${{ needs.read_msrv.outputs.msrv }}"]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          toolchain: ${{ matrix.rust }}

      - name: Enable type layout randomization
        run: echo RUSTFLAGS=${RUSTFLAGS}\ -Zrandomize-layout >> $GITHUB_ENV
        if: matrix.rust == 'nightly'

      - run: cargo test

  doc:
    name: Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (nightly)
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          toolchain: nightly

      - uses: dtolnay/install@cargo-docs-rs

      - run: cargo docs-rs

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          components: clippy

      - run: cargo clippy --tests -- -Dclippy::todo

  miri:
    name: Miri
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          components: miri

      - run: cargo miri setup

      - run: cargo miri test
        env:
          MIRIFLAGS: -Zmiri-strict-provenance
